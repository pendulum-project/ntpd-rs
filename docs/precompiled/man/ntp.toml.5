.\" Automatically generated by Pandoc 3.1.13
.\"
.TH "NTP.TOML" "5" "" "ntpd\-rs 1.1.3" "ntpd\-rs"
.SH NAME
\f[CR]ntp.toml\f[R] \- configuration file for the ntpd\-rs ntp\-daemon
.SH DESCRIPTION
Configuration of ntpd\-rs happens in the \f[CR]ntp.toml\f[R]
configuration format.
The toml format is in lots of ways similar to a simple ini with several
extensions allowing a json\-like syntax.
.PP
The ntpd\-rs configuration file consists of several sections, each of
which configuring a separate part of the ntp\-daemon process.
Each of the secions is described in the rest of this document.
Many settings will have defaults, which will be indicated by each
configuration setting shown.
.PP
The ntp daemon only supports unicast client\-server connections.
Most NTP traffic, especially across the public internet, almost
exclusively uses this mode, so it is not considered a practical
limitation for most scenarios.
.SH SOURCE MODES
Different types of sources (see the section below for details) are
supported by the ntp daemon.
To set the type of the source, you can configure the mode field with any
of these options:
.TP
\f[CR]server\f[R]
A server source connects to a single specific NTP server.
If a connection is lost, attempts will be made to reconnect to the
source.
.TP
\f[CR]pool\f[R]
A pool source retrieves multiple NTP servers by resolving a hostname via
DNS.
It then attempts to connect to multiple of these servers at the same
time.
If a connection is lost, a new server will be retrieved from the pool.
.TP
\f[CR]nts\f[R]
Connect to a single Network Time Security (NTS) source.
The NTS protocol uses a TLS handshake to exchange secrets with a server
to allow verifying that NTP messages have not been tampered with.
Note that the TLS protocol requires that both the client and server have
a rough idea of the current time.
.SH CONFIGURATION
.SS \f[CR][source\-defaults]\f[R]
Some values are shared between all sources in the daemon.
You can configure these in the \f[CR][source\-defaults]\f[R] section.
.TP
\f[CR]poll\-interval\-limits\f[R] = { \f[CR]min\f[R] = \f[I]min\f[R], \f[CR]max\f[R] = \f[I]max\f[R] } (\f[B]{ min = 4, max = 10}\f[R])
Specifies the limit on how often a source is queried for a new time.
For most instances the defaults will be adequate.
The min and max are given as the log2 of the number of seconds
(i.e.\ two to the power of the interval).
An interval of 4 equates to 32 seconds, 10 results in an interval of
1024 seconds.
If specified, both min and max must be specified.
.TP
\f[CR]initial\-poll\-interval\f[R] = \f[I]interval\f[R] (\f[B]4\f[R])
Initial poll interval used on startup.
The value is given as the log2 of the number of seconds (i.e.\ two to
the power of the interval).
The default value of 4 results in an interval of 32 seconds.
.SS \f[CR][[source]]\f[R]
Each \f[CR][[source]]\f[R] is a set of one or more time sources for the
daemon to retrieve time information from.
Any number of sources can be configured by repeating a
\f[CR][[source]]\f[R] section (note the double brackets) for as many
times as required.
Each source can be configured to connect to a specific remote location.
Multiple modes for connecting to sources are supported.
If less than \f[CR]minimum\-agreeing\-sources\f[R] time sources have
been configured, no time will be synchronized to the local clock.
Note that a pool counts as multiple time sources.
.TP
\f[CR]mode\f[R] = \f[I]mode\f[R]
Specify one of the source modes that ntpd\-rs supports:
\f[CR]server\f[R], \f[CR]pool\f[R] or \f[CR]nts\f[R].
For a description of the different source modes, see the \f[I]SOURCE
MODES\f[R] section.
.TP
\f[CR]address\f[R] = \f[I]address\f[R]
Specify the remote address of the source.
For server sources this will be the remote address of the NTP server.
For pools, this will be the DNS address of the NTP pool and for nts this
will be the address of the key exchange server.
The server address may include a port number by appending a colon
(\f[CR]:\f[R]) followed by a port number.
If not specified the daemon will connect to \f[CR]server\f[R] and
\f[CR]pool\f[R] servers via port \f[I]123\f[R], for \f[CR]nts\f[R]
sources the default port is \f[I]4460\f[R].
.TP
\f[CR]certificate\-authority\f[R] = \f[I]cert\f[R]
Can only be set on sources with the \f[CR]nts\f[R] mode.
Path to a certificate for an additional certificate authority to use,
aside from the certificate authorities specified by the system
configuration.
Note that this cannot be used to specify a self signed certificate.
.TP
\f[CR]count\f[R] = \f[I]number\f[R] (\f[B]4\f[R])
Can only be set on sources with the \f[CR]pool\f[R] mode.
Specifies the maximum number of servers that the daemon will attempt to
connect to from a pool.
The daemon will keep retrying to get more sources from the pool when
connections are lost, up to the maximum specified by this configuration
value.
.SS \f[CR][[server]]\f[R]
The NTP daemon can be configured to distribute time via any number of
\f[CR][[server]]\f[R] sections.
If no such sections have been defined, the daemon runs in a client only
mode.
Any number of servers can be configured by repeating the
\f[CR][[server]]\f[R] section (note the double brackets) for as many
times as required.
Each server can serve a specific socket address or listen on all
available network interfaces on a specific port.
Servers always serve the system clock time.
.TP
\f[CR]listen\f[R] = \f[I]socketaddr\f[R]
Address of a UDP socket on which the server should listen for incoming
NTP requests.
Specified as an interface IP address, a colon and a port number.
The standard port number for NTP is UDP port 123.
Both IPv4 and IPv6 are supported.
For example to listen on localhost port 123 in IPv4 you can use
\f[CR]127.0.0.1:123\f[R].
You can listen on all available network interfaces at once using
\f[CR]0.0.0.0:123\f[R] for IPv4 or \f[CR][::]:123\f[R] for IPv6.
.TP
\f[CR]rate\-limiting\-cache\-size\f[R] = \f[I]size\f[R] (\f[B]0\f[R])
Number of elements in the rate limiting cache.
At most \f[I]size\f[R] elements are kept in the cache.
This means that if more than \f[I]size\f[R] different clients attempt to
connect to the server too frequently, the cache size will have reduced
functionality, as rate limiting information gets lost when new clients
connect to the server.
If set to zero, the cache is unused, this is the default.
.TP
\f[CR]rate\-limiting\-cutoff\-ms\f[R] = \f[I]cutoff\f[R] (\f[B]0\f[R])
Minimum time between two requests from the same client, if a request was
sent sooner than the cutoff time, the client will be asked to slow down
their requests by the server responding with a packet with the NTP
\f[CR]RATE\f[R] kiss code.
No actual time measurement will be returned to the client in that case.
If set to zero, no rate limiting is applied, this is the default.
.TP
\f[CR]allowlist\f[R] = { filter = [ \f[I]subnet\f[R], .. ], action = \f[CR]\[dq]deny\[dq]\f[R] | \f[CR]\[dq]ignore\[dq]\f[R] } (\f[B]unset\f[R])
Only allow any number of filtered \f[I]subnets\f[R] to connect to the
daemon.
Any IP that matches one of the subnets specified is allowed to contact
this server.
The subnets must be specified in CIDR notation (an IP address followed
by a slash and the number of masked bits, for example
\f[CR]127.0.0.1/8\f[R] or \f[CR]192.168.1.1/24\f[R]).
The action determines what measure is taken for IP addresses not in any
of the specified subnets.
When \f[CR]deny\f[R], an explicit packet with the NTP \f[CR]DENY\f[R]
kiss code is returned to the sender indicating that they are not allowed
to do so.
When \f[CR]ignore\f[R] is specified, messages are discarded with no
response sent.
The default value is equivalent to allowing any IP address, and would be
equivalent to setting the filter to
\f[CR][\[dq]0.0.0.0/0\[dq], \[dq]::/0\[dq]]\f[R], with either action.
.TP
\f[CR]denylist\f[R] = { filter = [ \f[I]subnet\f[R], .. ], action = \f[CR]\[dq]deny\[dq]\f[R] | \f[CR]\[dq]ignore\[dq]\f[R] } (\f[B]unset\f[R])
Do not allow any number of filtered \f[I]subnets\f[R] to connect to the
daemon.
Any IP that matches one of the subnets specified is not allowed to
contact this server.
The subnets must be specified in CIDR notation (an IP address followed
by a slash and the number of masked bits, for example
\f[CR]127.0.0.1/8\f[R] or \f[CR]192.168.1.1/24\f[R]).
The action determines what measure is taken for IP addresses in any of
the specified subnets.
When \f[CR]deny\f[R], an explicit packet with the NTP \f[CR]DENY\f[R]
kiss code is returned to the sender indicating that they are not allowed
to do so.
When \f[CR]ignore\f[R] is specified, messages are discarded with no
response sent.
The default value is equivalent to allowing any IP address, and would be
equivalent to setting the filter to \f[CR][]\f[R], with either action.
.SS \f[CR][observability]\f[R]
Settings in this section configure how you can observe the behavior of
the daemon.
Currently the daemon can be observed either through the logs or by
retrieving several key metrics either through ntp\-ctl(8) or through
ntp\-metrics\-exporter(8).
.TP
\f[CR]log\-level\f[R] = \f[CR]\[dq]trace\[dq]\f[R] | \f[CR]\[dq]debug\[dq]\f[R] | \f[CR]\[dq]info\[dq]\f[R] | \f[CR]\[dq]warn\[dq]\f[R] | \f[CR]\[dq]error\[dq]\f[R] (\f[B]unset\f[R])
Set the logging level for messages printed to stdout.
The lowest level \f[CR]trace\f[R] gives very detailed information about
anything going on in the daemon, whereas the highest level
\f[CR]error\f[R] only logs error conditions in the daemon.
Levels higher than the given log level are logged as well.
If not set (the default), then logging will be completely disabled.
.TP
\f[CR]observation\-path\f[R] = \f[I]path\f[R] (\f[B]unset\f[R])
Path where the daemon will create an observation unix domain socket.
This socket is used by \f[CR]ntp\-ctl\f[R] and
\f[CR]ntp\-metrics\-exporter\f[R] to read the current status of the
daemon.
If not set (the default) no observation socket will be created and it is
not possible to use \f[CR]ntp\-ctl\f[R] or
\f[CR]ntp\-metrics\-exporter\f[R] to observe the daemon.
.TP
\f[CR]observation\-permissions\f[R] = \f[I]mode\f[R] (\f[B]0o666\f[R])
The file system permissions with which the observation socket should be
created.
Warning: You should always write this number with the octal prefix
\f[CR]0o\f[R], otherwise your permissions might be interpreted wrongly.
The default should be ok for most applications however.
.TP
\f[CR]metrics\-exporter\-listen\f[R] = \f[I]socketaddr\f[R] (\f[B]127.0.0.1:9975\f[R])
The listen address that is used for the ntp\-metrics\-exporter(8).
.SS \f[CR][keyset]\f[R]
The keyset configures the internal key infrastructure for NTS packets.
Note that this is separate from the TLS certificate and private key, for
those see the relevant configuration in the
\f[CR][[nts\-ke\-server]]\f[R] section.
.TP
\f[CR]stale\-key\-count\f[R] = \f[I]count\f[R] (\f[B]7\f[R])
Maximum number of old keys to retain in the cache.
Whenever keys are rotated the old keys will become invalid, but clients
may still have NTS cookies encrypted with any of the old keys.
.TP
\f[CR]key\-rotation\-interval\f[R] = \f[I]seconds\f[R] (\f[B]86400\f[R])
Time between key rotation events.
Every time \f[I]seconds\f[R] elapses, a new internal key will be
generated for creating NTS cookies.
By default this is set to a day.
.TP
\f[CR]key\-storage\-path\f[R] = \f[I]path\f[R] (\f[B]unset\f[R])
If set, stores the internal NTS keys in the file indicated by
\f[I]path\f[R].
This allows keys to survive a server reboot.
If not set, clients using NTS may need to redo a key exchange operation
to get new NTS cookies.
.SS \f[CR][[nts\-ke\-server]]\f[R]
The daemon can be configured to operate as an NTS key exchange server by
repeating any number of \f[CR][[nts\-ke\-server]]\f[R] sections.
If no such sections have been defined, the daemon will offer no NTS key
exchange services.
All NTS\-KE servers make use of the shared keyset.
It is the purpose of the key exchange server to distribute cookies to
clients in a safe way.
These cookies can then be used in NTP packets with the normal server to
validate that the traffic was untampered with.
.TP
\f[CR]listen\f[R] = \f[I]socket\f[R]
Address of a TCP socket on which the server should listen for incoming
NTS key exchange requests.
Specified as an interface IP address, a colon and a port number.
The standard port number for an NTS key exchange server is TCP port
4460.
Both IPv4 and IPv6 are supported.
For example to listen on localhost port 4460 in IPv4 you can use
\f[CR]127.0.0.1:4460\f[R].
You can listen on all available network interfaces at once using
\f[CR]0.0.0.0:4460\f[R] for IPv4 or \f[CR][::]:4460\f[R] for IPv6.
.TP
\f[CR]certificate\-chain\-path\f[R] = \f[I]path\f[R]
Path to a certificate chain for the public certificate that the server
offers to clients.
.TP
\f[CR]private\-key\-path\f[R] = \f[I]path\f[R]
Path to the private key associated with the server certificate in the
certificate chain.
.TP
\f[CR]key\-exchange\-timeout\-ms\f[R] = \f[I]timeout\f[R] (\f[B]1000\f[R])
Timeout in milliseconds for how long a key exchange may take.
If the timeout is exceeded the connection will be dropped.
.TP
\f[CR]concurrent\-connections\f[R] = \f[I]number\f[R] (\f[B]512\f[R])
Maximum number of concurrent connections the key exchange server will
handle.
Any connections above the threshold will be held in an OS level queue.
.PP
\f[CR]ntp\-port\f[R] = \f[I]port\f[R] Port number the key exchange
server should instruct clients to use.
Should be used when the port number of the NTP server is not the
default.
.PP
\f[CR]ntp\-server\f[R] = \f[I]server\-name\f[R] Server address (either
as ip or as domain name) where clients can find the NTP server.
Should be used when this name does not match the name of the NTS key
exchange server.
.SS \f[CR][synchronization]\f[R]
This section of the configuration focusses on how the time information
from the time sources is gathered and applied to the system clock.
.TP
\f[CR]minimum\-agreeing\-sources\f[R] = \f[I]count\f[R] (\f[B]3\f[R])
The minimum number of sources that should agree on the current time
before the daemon does any steering operation on the clock.
Note that if you have configured fewer than this amount of sources, this
may result in the daemon never updating the clock.
.TP
\f[CR]single\-step\-panic\-threshold\f[R] = \f[I]seconds\f[R] | { \f[CR]forward\f[R] = \f[I]forward\f[R], \f[CR]backward\f[R] = \f[I]backward\f[R] } (\f[B]1000\f[R])
The threshold in seconds at which the daemon will completely exit (i.e.
panic) when a single non\-startup step occurs.
Generally during normal operation the clock on your system should run
somewhat close to the time it is synchronized to.
As such, it is highly unlikely that such a large step will take place,
and the daemon will exit to prevent any accidental mistakes.
If set to the value \f[CR]\[dq]inf\[dq]\f[R], any step will be allowed.
May either be configured as one number of seconds for both forward and
backward steps, or separate values for forward and backward steps.
.TP
\f[CR]startup\-step\-panic\-threshold\f[R] = \f[I]seconds\f[R] | { \f[CR]forward\f[R] = \f[I]forward\f[R], \f[CR]backward\f[R] = \f[I]backward\f[R] } (\f[B]{ forward = \[lq]inf\[rq], backward = \[lq]86400\[rq] }\f[R])
The threshold in seconds at which the daemon will completely exit (i.e.
panic) when a step occurs at startup.
The default allows any forward step, but prevents backward steps larger
than a single day.
Generally computer clocks that are not synchronized will run behind the
true time, instead of running ahead.
If a computer is running ahead and steps back a large time this
generally indicates a problem.
If set to the value \f[CR]\[dq]inf\[dq]\f[R], any step will be allowed.
May either be configured as one number of seconds for both forward and
backward steps, or separate values for forward and backward steps.
.TP
\f[CR]accumulated\-step\-panic\-threshold\f[R] = \f[I]seconds\f[R] (\f[B]unset\f[R])
Every time the daemon steps the time instead of slowly adjusting the
clock by using frequency changes, this counter is increased by the
absolute value of the step (i.e.\ both forward and backward steps are
counted).
When this threshold is reached, the daemon will exit immediately
(i.e.\ panic).
During normal operation steps are unlikely to occur, and as such, steps
may indicate that someone or something is triggering illicit steps.
By default however this panic mechanism is disabled.
Is disabled if left unset or if set to the value \f[CR]0\f[R].
.TP
\f[CR]local\-stratum\f[R] = \f[I]stratum\f[R] (\f[B]16\f[R])
Sets the NTP clock stratum of the system clock when no NTP time sources
have been configured, or when the time has not yet been synchronized
from an NTP time source.
Can be used in servers to indicate that there are external mechanisms
synchronizing the clock.
.SS \f[CR][synchronization.algorithm]\f[R]
Warning: the algorithm section contains mostly internal algorithm tweaks
that generally do not need to be changed.
However, they are offered here for specific use cases.
These settings are considered implementation details however, and as
such may change in future ntpd\-rs versions.
.TP
\f[CR]precision\-low\-probability\f[R] = \f[I]probability\f[R] (\f[B]1/3\f[R])
Probability bound below which we start moving towards decreasing our
precision estimate.
Unit: probability, 0\-1
.TP
\f[CR]precision\-high\-probability\f[R] = \f[I]probability\f[R] (\f[B]2/3\f[R])
Probability bound above which we start moving towards increasing our
precision estimate.
Unit: probability, 0\-1
.TP
\f[CR]precision\-hysteresis\f[R] = \f[I]hysteresis\f[R] (\f[B]16\f[R])
Amount of hysteresis in changing the precision estimate.
Unit: count, 1+
.TP
\f[CR]precision\-minimum\-weight\f[R] = \f[I]weight\f[R] (\f[B]0.1\f[R])
Lower bound on the amount of effect our precision estimate has on the
total noise estimate before we allow decreasing of the precision
estimate.
Unit: weight, 0\-1
.TP
\f[CR]poll\-interval\-low\-weight\f[R] = \f[I]weight\f[R] (\f[B]0.4\f[R])
Amount which a measurement contributes to the state, below which we
start increasing the poll interval.
Unit: weight, 0\-1
.TP
\f[CR]poll\-interval\-high\-weight\f[R] = \f[I]weight\f[R] (\f[B]0.6\f[R])
Amount which a measurement contributes to the state, above which we
start decreasing the poll\-interval interval.
Unit: weight, 0\-1
.TP
\f[CR]poll\-interval\-hysteresis\f[R] = \f[I]hysteresis\f[R] (\f[B]16\f[R])
Amount of hysteresis in changing the poll interval.
Unit: count, 1+
.TP
\f[CR]poll\-interval\-step\-threshold\f[R] = \f[I]threshold\f[R] (\f[B]1e\-6\f[R])
Probability threshold for when a measurement is considered a significant
enough outlier that we decide something weird is going on and we need to
do more measurements.
Unit: probability, 0\-1
.TP
\f[CR]delay\-outlier\-threshold\f[R] = \f[I]threshold\f[R] (\f[B]5.0\f[R])
Threshold (in number of standard deviations) above which measurements
with a significantly larger network delay are rejected.
Unit: standard deviations, 0+
.TP
\f[CR]initial\-wander\f[R] = \f[I]wander\f[R] (\f[B]1e\-8\f[R])
Initial estimate of the clock wander of the combination of our local
clock and that of the source.
Unit: s/s\[ha]2
.TP
\f[CR]initial\-frequency\-uncertainty\f[R] = \f[I]uncertainty\f[R] (\f[B]100e\-6\f[R])
Initial uncertainty of the frequency difference between our clock and
that of the source.
Unit: s/s
.TP
\f[CR]maximum\-source\-uncertainty\f[R] = \f[I]uncertainty\f[R] (\f[B]0.25\f[R])
Maximum source uncertainty before we start disregarding it.
Note that this is combined uncertainty due to noise and possible
assymetry error (see also weights below).
Unit: seconds
.TP
\f[CR]range\-statistical\-weight\f[R] = \f[I]weight\f[R] (\f[B]2.0\f[R])
Weight of statistical uncertainty when constructing overlap ranges.
Unit: standard deviations, 0+
.TP
\f[CR]range\-delay\-weight\f[R] = \f[I]weight\f[R] (\f[B]0.25\f[R])
Weight of delay uncertainty when constructing overlap ranges.
Unit: weight, 0\-1
.TP
\f[CR]steer\-offset\-threshold\f[R] = \f[I]threshold\f[R] (\f[B]2.0\f[R])
How far from 0 (in multiples of the uncertainty) should the offset be
before we correct.
Unit: standard deviations, 0+
.TP
\f[CR]steer\-offset\-leftover\f[R] = \f[I]stddev\f[R] (\f[B]1.0\f[R])
How many standard deviations do we leave after offset correction?
Unit: standard deviations, 0+
.TP
\f[CR]steer\-frequency\-threshold\f[R] = \f[I]threshold\f[R] (\f[B]0.0\f[R])
How far from 0 (in multiples of the uncertainty) should the frequency
estimate be before we correct.
Unit: standard deviations, 0+
.TP
\f[CR]steer\-frequency\-leftover\f[R] = \f[I]stddev\f[R] (\f[B]0.0\f[R])
How many standard deviations do we leave after frequency correction?
Unit: standard deviations, 0+
.TP
\f[CR]step\-threshold\f[R] = \f[I]threshold\f[R] (\f[B]0.010\f[R])
From what offset should we step the clock instead of trying to adjust
gradually?
Unit: seconds, 0+
.TP
\f[CR]slew\-maximum\-frequency\-offset\f[R] = \f[I]offset\f[R] (\f[B]200e\-6\f[R])
What is the maximum frequency offset during a slew.
Unit: s/s
.TP
\f[CR]slew\-minimum\-duration\f[R] = \f[I]duration\f[R] (\f[B]495e\-6\f[R])
What is the minimum duration of a slew.
Unit: seconds
.TP
\f[CR]maximum\-frequency\-steer\f[R] = \f[I]frequency\f[R] (\f[B]8.0\f[R])
Absolute maximum frequency correction.
Unit: s/s
.TP
\f[CR]ignore\-server\-dispersion\f[R] = \f[I]bool\f[R] (\f[B]false\f[R])
Ignore a servers advertised dispersion when synchronizing.
Can improve synchronization quality with servers reporting overly
conservative root dispersion.
.TP
\f[CR]meddling\-threshold\f[R] = \f[I]threshold\f[R] (\f[B]5.0\f[R])
Threshold for detecting external clock meddling.
Unit: seconds
.SH SEE ALSO
ntp\-daemon(8), ntp\-ctl(8), ntp\-metrics\-exporter(8)
