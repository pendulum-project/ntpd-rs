.\" Automatically generated by Pandoc 3.1.1
.\"
.\" Define V font for inline verbatim, using C font in formats
.\" that render this, and otherwise B font.
.ie "\f[CB]x\f[]"x" \{\
. ftr V B
. ftr VI BI
. ftr VB B
. ftr VBI BI
.\}
.el \{\
. ftr V CR
. ftr VI CI
. ftr VB CB
. ftr VBI CBI
.\}
.TH "NTP.TOML" "5" "" "ntpd-rs 1.0.0-dev.20230907" "ntpd-rs"
.hy
.SH NAME
.PP
\f[V]ntp.toml\f[R] - configuration file for the ntpd-rs ntp-daemon
.SH DESCRIPTION
.PP
Configuration of ntpd-rs happens in the \f[V]ntp.toml\f[R] configuration
format.
The toml format is in lots of ways similar to a simple ini with several
extensions allowing a json-like syntax.
.PP
The ntpd-rs configuration file consists of several sections, each of
which configuring a separate part of the ntp-daemon process.
Each of the secions is described in the rest of this document.
Many settings will have defaults, which will be indicated by each
configuration setting shown.
.PP
For those familiar with the NTP protocol: ntpd-rs only supports unicast
client-server connections and the concepts in ntpd-rs are all built up
around that concept.
Most NTP traffic, especially across the public internet, almost
exclusively uses this mode, so it is not considered a practical
limitation for most scenarios.
.SH CONCEPTS
.SS Source
.PP
A source represents a set of one or more connections to time sources
(another NTP server) where the daemon retrieves time information from.
The time information from these sources are then filtered and combined
to update the local clock.
The daemon can have multiple of these sources sets configured to allow
for a wider range of time sources.
When ntp-daemon is used in a client only setup the configuration only
contains source configurations and no server configurations.
.SS Server
.PP
A server distributes time information to clients who request it.
A server listens on a single socket address for client packets and
responds to them.
The daemon can listen on multiple sockets by creating multiple server
configurations.
Generally, when NTP is configured as a server it also has one or more
source configurations from where time is retrieved.
The daemon currently does not have support for local time sources, if no
sources are configured, then another process should be in place to
discipline the local system clock.
.SS NTS and keysets
.PP
NTS, Network Time Security, is a protocol that uses a TLS handshake to
exchange secrets to allow verifying that responses from an NTP server
have not been tampered with.
The daemon supports running NTS in both server and client (source)
connections.
For the server functionality a key exchange server also needs to be
configured.
Currently only an internal key exchange server is supported.
The NTP server and TLS key exchange server of the ntp-daemon both need
to be aware of a shared set of keys, these keys are called the keyset.
.SS Logging and observability
.PP
The daemon can log messages about how it is operating in different
logging levels.
These log messages come in several priorities (from low to high):
\f[I]trace\f[R], \f[I]debug\f[R], \f[I]info\f[R], \f[I]warn\f[R] and
\f[I]error\f[R].
You can use these log messages to monitor the daemon.
The log messages are outputted on stdout.
.PP
Aside from logging, you can use the observability metrics to get
semi-realtime information about several key metrics for both the client
and server part of the daemon.
These metrics are exposed via the \f[V]ntp-ctl\f[R] CLI utility, or by
using our prometheus / openmetrics exporter.
.SS Clocks and synchronization
.PP
Of course the main reason for running an NTP daemon is to get accurate
time information.
This should result in the daemon adjusting your system clock.
The algorithm that is used to combine the information from several
sources and update the system clock can be configured using the
synchronization section in the configuration file.
.SH CONFIGURATION
.SS \f[V][source-defaults]\f[R]
.PP
Some values are shared between all sources in the daemon.
You can configure these in the \f[V][source-defaults]\f[R] section.
.TP
\f[V]poll-interval-limits\f[R] = { \f[V]min\f[R] = \f[I]min\f[R], \f[V]max\f[R] = \f[I]max\f[R] } (\f[B]{ min = 4, max = 10}\f[R])
Specifies the limit on how often a source is queried for a new time.
For most instances the defaults will be adequate.
The min and max are given as the log2 of the number of seconds
(i.e.\ two to the power of the interval).
An interval of 4 equates to 32 seconds, 10 results in an interval of
1024 seconds.
If specified, both min and max must be specified.
.TP
\f[V]initial-poll-interval\f[R] = \f[I]interval\f[R] (\f[B]4\f[R])
Initial poll interval used on startup.
The value is given as the log2 of the number of seconds (i.e.\ two to
the power of the interval).
The default value of 4 results in an interval of 32 seconds.
.SS \f[V][[source]]\f[R]
.PP
Any number of sources can be configured by repeating a
\f[V][[source]]\f[R] section (note the double brackets) for as many
times as required.
Each source can be configured to connect to a specific remote location.
.TP
\f[V]mode\f[R] = \f[I]mode\f[R]
Specify one of the source modes that ntpd-rs supports: \f[V]server\f[R],
\f[V]pool\f[R] or \f[V]nts\f[R].
.TP
\f[V]address\f[R] = \f[I]address\f[R]
Specify the remote address of the source.
For server sources this will be the remote address of the NTP server.
For pools, this will be the DNS address of the NTP pool and for nts this
will be the address of the key exchange server.
The server address may include a port number by appending a colon
(\f[V]:\f[R]) followed by a port number.
If not specified the daemon will connect to \f[V]server\f[R] and
\f[V]pool\f[R] servers via port \f[I]123\f[R], for \f[V]nts\f[R] sources
the default port is \f[I]4460\f[R].
.TP
\f[V]certificate_authority\f[R] = \f[I]cert\f[R]
Can only be set on sources with the \f[V]nts\f[R] mode.
Path to a certificate for an additional certificate authority to use,
aside from the certificate authorities specified by the system
configuration.
Note that this cannot be used to specify a self signed certificate.
.TP
\f[V]count\f[R] = \f[I]number\f[R] (\f[B]4\f[R])
Can only be set on sources with the \f[V]pool\f[R] mode.
Optionally specifies an alternative for the maximum number of servers
that will be retrieved from the pool.
The daemon will keep retrying to get more sources from the pool when
connections are lost, up to the maximum specified by this configuration
value.
.SS \f[V][[server]]\f[R]
.PP
Any number of servers can be configured by repeating a
\f[V][[server]]\f[R] section (note the double brackets) for as many
times as required.
Each server can serve a specific socket address.
Servers always serve the system clock time.
.TP
\f[V]listen\f[R] = \f[I]socketaddr\f[R]
Address of a socket on which the server should listen for incoming NTP
requests.
Specified as an interface IP address, a colon and a port number.
Both IPv4 and IPv6 are supported.
For example to listen on localhost port 123 in IPv4 you can use
\f[V]127.0.0.1:123\f[R].
You can listen on all available network interfaces at once using
\f[V]0.0.0.0:123\f[R] for IPv4 or \f[V][::]:123\f[R] for IPv6.
.SS \f[V][observability]\f[R]
.SS \f[V][synchronization]\f[R]
.SS \f[V][[nts-ke-server]]\f[R]
.SS \f[V][keyset]\f[R]
.SH SEE ALSO
.PP
ntp-daemon(8), ntp-ctl(8), ntp-metrics-exporter(8)
